#copy table
在同一主机不同数据库中

    create table gwdb.mismatch_topic select * from mismatch mismatch_topic;
#SQL多重查询之inner join on

select a.name,b.name from a inner join b on a.id=b.id;
    
select a.name,b.name from a inner join b using(id);

#别名关键字AS
    
select a.name,b.name from mismatch_topic as a 

inner join mismatch_category as b using(id)

inner join mismatch_response as c using(id) 
     
where a.name='Span';

#like %
like %ad % 包含ad 的<br/>
like %worker 结尾是worker<br/>
#explore 用空格、逗号、等分解字符串
$search_word=explore('','Tipper Cow');<br/>
分隔为tipper，cow单独存入数组中<br/>
#implode 串数组中加入词
$where_clause=implode('or',$wherelist);
<br/>在数组wherelist买个词后加入or
#str_replace 查找替换
str_replace(',','','hello,world!');<br/>
把hello,world换为hello world.
#substr 抽取子串
substr('asdf',begin,end)

## 分页
#正则表达式
[]理解为：数组
{}理解为：重复次数
\理解为：转意
#preg_match($regex,$string)
#preg_replace($old,$new,$string)
根据规则来替换，更加灵活的一个方法
#email验证
/^[a-zA-Z0-9][a-zA-Z0-9\._\-&!?=#]*@/
#后缀验证
checkdnsrr()，检查是否已经注册。
#eclipse for php
> 任务需要：<br>
> 一个执行php的网页环境搭建,使用xampp已经完成了php+mysql+apache+tomcat的web环境<br>
> 一个为开发而建立的eclipse环境，新建php项目后，通过a.php（原为a.html）执行整个网页代码。<br>


有几个需要注意的<br>

* 怎样配置PHP?<br>
> 在windows-preference-PHP中，再把xampp的PHP配置到里面。这样在执行的时候就可以调用，在导航中并不会出现servers的本地代码文件<br>
 
* php的安装成功怎样测试的呢？<br>
> phpinfo()可以运行整个php环境的数据，那就是成功的咯<br>
#客户端到服务器
* 通信发送端：通过html（a,form）的url，action设置发送信息的目的地。<br/>
* URL，就是地址http://.，然后进入www网络，搜索到对应的空间，将“请求”消息传到到服务器。<br/>
* 服务器：下发html，css文件到客户端，或者先执行一段程序再将结果返回客户端。<br/>

总的来说，就是一个消息发，收到以后，作出反馈。这是计算机网络的内容，属于将信息全双工通信的一个例子。为什么需要交换机，就是因为发展需要，对于全双工通信的需要。


#post到.php文件的网页
* POST：method="post"设置后在服务器对应一个$_POST变量，存放传递的所有数据变量，它是一个数组，通过$_POST['aaa']访问,aaa是html中name对应的值。<br/>

*  数据库连接:<br/>
    $dbc=mysqli_connect('localhost','root','','website')

* 数据库传递字符串：<br/>
    $query="insert into ....;";

* 数据库"查询":<br/>
    `mysqli_query($dbc,$query);`

* 数据库关闭：<br/>
     `mysqli_close($dbc);`

    

#while循环PHP
* while中查询表的一行数据作为条件，自动调用tonext()行，隐调用。
* php文件可以嵌套html，仅仅转换编译模式<?php?>是执行php编译，否则就是html。

    <?php
 
    while($row=mysqli_fetch_array($result)){

	echo '<input type="checkbox" value="'.$row['id'].'" 

    name="todelete[]"/>';
	
    echo $row['first_name'];
	
    echo $row['last_name'];
	
    echo $row['email'];
	
    echo '<br/>';

    ?>


## if-else-if避免嵌套的写法 ##
    if(){if(){if()}}}
这个是and条件语句，改为&& and 都可以<br/>

    if(){}if(){}
这个是or条件语句，改为|| or，都可以<br/>

* 00,10,01,11,直接写4个if条件语句，就可以避免2个条件判断的复杂嵌套
* 000,001,010,011,100,101,110,111，直接写8个if条件语句，可以避免3个条件判断的复杂嵌套。

#获得数据库的一行

    while($row=mysqli_fetch_array($result)){

    $first_name=$row['first_name']; 

#.php文件中action调用自己

    <form method="post" action="<?php echo $_SERVER['PHP_SELF'];?>">
    
# 检测是否提交

    $set=$_POST['submit'];

    if(isset($set)){


#复选框

    echo '<input type="checkbox" value="'.$row['id'].'" name="todelete[]"/>';

   * 选择复选框的数组元素，循环foreach
   
    `foreach($_POST['todelete'] as $delete_id){`

#mismatchuser
> 可以注册用户，查询，修改，浏览，注销，连接数据库，本地手机wifi访问

#session+cookie
1. session_start()设置通路，访问服务器session变量
2. $_session['username']变量访问格式
3. session_name()是cookie名字
4. $_session=array（）清空变量
5. session_destroy()取消通路，session变量不再使用
    
